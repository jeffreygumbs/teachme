// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          UserRole @default(USER)
  accounts      Account[]
  isTwoFactorEnabled Boolean @default(true)
twoFactorConfirmation TwoFactorConfirmation?
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model VerificationToken {
  id String @id @default(cuid())
  username String
  token String @unique
  expires DateTime
  @@unique([username, token])
}

model PasswordResetToken {
  id String @id @default(cuid())
  username String
  token String @unique
  expires DateTime
  @@unique([username, token])

}
model TwoFactorToken {
  id String @id @default(cuid())
  username String
  token String @unique
  expires DateTime
  @@unique([username, token])

}

model TwoFactorConfirmation {
  id String @id @default(cuid())
  userId String @unique
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model TeacherActivity {
  teacher_id Int @id @default(autoincrement())
  name String
  image String @default("https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_1280.png")
  last_active DateTime @default(now())
  activity_score Int
  student_interaction_rating Float
  subjects_taught String[]
  coach_teacher_interaction CoachTeacherInteraction[]
  ResourceAllocation ResourceAllocation[]
}

model StudentProgress {
  class_id Int @id @default(autoincrement())
  subject String
  average_score_improvement Int
  homework_completion_rate Int
  attendance_rate Int
}

model ResourceManagement {
  resource_id Int @id
  resource_name String
  allocated_teachers Int[]
  utilization_rate Int
  ResourceAllocation ResourceAllocation[]
}

model CoachDetail {
  coach_id Int @id @default(autoincrement())
  name String
  image String @default("https://i.imgur.com/1234567.png")
  specialization String
  years_of_experience Int
  coach_teacher_interaction CoachTeacherInteraction[]
}

model CoachTeacherInteraction {
  id Int @id @default(autoincrement())
  coach_id Int
  teacher_id Int
  last_meeting_date DateTime @default(now())
  meeting_notes String
  coach             CoachDetail @relation(fields: [coach_id], references: [coach_id])
  teacher           TeacherActivity @relation(fields: [teacher_id], references: [teacher_id])
}

model ResourceAllocation {
  teacher_id Int
  resource_id Int
  TeacherActivity TeacherActivity @relation(fields: [teacher_id], references: [teacher_id])
  ResourceManagement ResourceManagement @relation(fields: [resource_id], references: [resource_id])
  @@id([teacher_id, resource_id])
}
